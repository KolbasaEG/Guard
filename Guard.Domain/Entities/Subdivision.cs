namespace Guard.Domain.Entities
{
  public partial class Subdivision
  {
    // Идентификатор подразделения
    public Guid Id { get; private set; }

    // Корневой уровень подразделения
    public string Корневой { get; private set; }

    // Региональный уровень подразделения
    public string Региональный { get; private set; }

    // Территориальный уровень подразделения
    public string Территориальный { get; private set; }

    // Субтерриториальный уровень подразделения
    public string Субтерриториальный { get; private set; }

    // Адрес подразделения
    public string Адрес { get; private set; }

    // Уровень подразделения (числовой)
    public int Уровень { get; private set; }

    // Наименование подразделения
    public string Наименование { get; private set; }

    // Приватный конструктор для использования в EF Core
#pragma warning disable CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning disable CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning disable CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning disable CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning disable CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning disable CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
    private Subdivision() { }
#pragma warning restore CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning restore CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning restore CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning restore CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning restore CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.
#pragma warning restore CS8618 // Поле, не допускающее значения NULL, должно содержать значение, отличное от NULL, при выходе из конструктора. Возможно, стоит объявить поле как допускающее значения NULL.

    // Публичный конструктор для создания нового подразделения
    public Subdivision(
        string корневой,
        string региональный,
        string территориальный,
        string субтерриториальный,
        string адрес,
        int уровень,
        string наименование
    )
    {
      Id = Guid.NewGuid();
      Корневой = корневой;
      Региональный = региональный;
      Территориальный = территориальный;
      Субтерриториальный = субтерриториальный;
      Адрес = адрес;
      Уровень = уровень;
      Наименование = наименование;
    }
  }
}